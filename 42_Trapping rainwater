class Solution {
    public int trap(int[] height) {
        int left=0;
        int right=height.length-1;
        int leftbar=height[0];
        int rightbar=height[height.length-1];
        int ans=0;
        while(left<=right){//until left and right pointers meet
            if(leftbar<rightbar){//which  bar is the limiting bar
                if(height[left]>leftbar){//if the element that we are seeing now becomes the highest element at left it will not store any water
                    leftbar=height[left];
                }
                else{
                    ans+=leftbar-height[left];
                    left++;
                }
            }
            else{
                if(height[right]>rightbar){
                    rightbar=height[right];

                }
                else{
                    ans+=rightbar-height[right];
                    right--;
                }
            }
        }
        return ans;
        
    }
}
TC:O(n)
SC:O(1)
