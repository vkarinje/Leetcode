class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if len(nums)==0:
            return -1
        left=0
        right=len(nums)-1
        start=self.findMin(nums)
        if target>=nums[start] and target<=nums[right]:
            left=start
        else:
            right=start
        while left<=right:
            mid=(left+right)//2
            if target==nums[mid]:
                return mid
            if target<nums[mid]:
                right=mid-1
            else:
                left=mid+1
        return -1

    def findMin(self,nums):
        if len(nums)==1:
            return 0
        left=0
        right=len(nums)-1
        if nums[left]<nums[right]:
            return left
        while left<=right:
                mid=(left+right)//2
                if nums[mid]>nums[mid+1]:
                    return mid+1
                if nums[mid]<nums[mid-1]:
                    return mid
                if nums[0]<nums[mid]:
                    left=mid+1
                else:
                    right=mid-1
  Time: both functions have O(logn)
Space:O(1) for both
