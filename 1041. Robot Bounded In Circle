class Solution {
    public boolean isRobotBounded(String instructions) {
        int x=0;
        int y=0;//initially the robot is at origin(0,0)
        int direction=0;//(North is 0, East is 1, south is 2 and West is 3)
        //      N=0
        // W=3          E=1
        //      S=2
        for(char c:instructions.toCharArray()){
            if(c=='G'){
                switch (direction){
                    case 0:y++; break;
                    case 1:x++; break;
                    case 2:y--; break;
                    case 3:x--; break;
                }
            }
            else if(c=='L'){//(anti-clockwise)
                direction=direction==0?3:(direction-1);//ternary operator or conditional operator//if direction is 0 the robot is facing towards north now. Moving left should take it to south which is 3. suppose if robot is facing south(2). movinf left will take it to east(1). so we are doing direction-1
            }
            else if(c=='R'){//clockwise
                direction=(direction+1)%4;//suppose robot is facing north(0). when moving right it goes to east
            }
        }
        if(direction!=0||(x==0 && y==0)){//when the final direction is not facing north or when the x and y cordinates are at origin return true;
            return true;
        }
        return false;
        

        
    }
}
TC:O(n)
SC:O(1)
