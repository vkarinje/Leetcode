class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        forward = [1]* len(nums)
      

        for i in range(1,len(nums)):
            forward[i]=forward[i-1]*nums[i-1]
        end=len(nums)-2
        backward = [1] * len(nums)
        while end>=0:
            backward[end]=backward[end+1] * nums[end+1]
            end=end-1
        print(forward)
        print(backward)
        for i in range(0,len(nums)):
             nums[i]=forward[i]*backward[i]
        return nums
